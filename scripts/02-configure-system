#!/bin/bash

set -eufo pipefail

# Users and groups
useradd -mG wheel "$USERNAME"
echo "$USERNAME:$PASSWORD" | chpasswd

# Enable parallel downloads, multilib and color in pacman
sed -i 's/^#ParallelDownloads/ParallelDownloads/' /etc/pacman.conf
sed -i '/^#\[multilib\]$/{s/^#//;n;s/^#//}' /etc/pacman.conf
sed -i 's/^#Color/Color/' /etc/pacman.conf

# Install packages
pacman -S --needed --noconfirm - < "$UTILS"/packages.txt
pacman -S --needed --noconfirm --asdeps - < "$UTILS"/packages-deps.txt
if [[ $LAPTOP = 'yes' ]]; then
  pacman -S --needed --noconfirm - < "$UTILS"/packages-laptop.txt
fi
if [[ $NVIDIA = 'yes' ]]; then
  pacman -S --needed --noconfirm nvidia
else
  pacman -S --needed --noconfirm mesa xf86-video-amdgpu libva-mesa-driver
fi

# Enable parallel compilation in makepkg.conf
sed -i 's/^#MAKEFLAGS=.*/MAKEFLAGS="-j$(nproc)"/' /etc/makepkg.conf

# Install yay
git clone https://aur.archlinux.org/yay.git
chown -R "$USERNAME":"$USERNAME" yay
cd yay
sudo -u "$USERNAME" makepkg -sirc --noconfirm
cd ..
rm -rf yay

# Install AUR packages
sudo -u "$USERNAME" yay -S --needed --noconfirm - < "$UTILS"/packages-aur.txt

# Time zone
ln -sf /usr/share/zoneinfo/Europe/London /etc/localtime
hwclock --systohc

# Localization
sed -i 's/#en_GB.UTF-8/en_GB.UTF-8/' /etc/locale.gen
sed -i 's/#en_US.UTF-8/en_US.UTF-8/' /etc/locale.gen
locale-gen
echo 'LANG=en_GB.UTF-8' > /etc/locale.conf
echo 'KEYMAP=uk' > /etc/vconsole.conf

# Network configuration
echo "$HOSTNAME" > /etc/hostname
systemctl enable NetworkManager.service

# Initramfs

# Root password
echo "root:$PASSWORD" | chpasswd

# Plymouth
sed -i '/^HOOKS=/s/)/ plymouth)/' /etc/mkinitcpio.conf

# Boot loader
sed -i 's/fmask=0022,dmask=0022/fmask=0137,dmask=0027/' /etc/fstab
umount "$ESP"
mount "$ESP"
UUID=$(blkid "$ROOT_PARTITION" --match-tag UUID -o value)
bootctl install
cp "$UTILS"/loader.conf "$ESP"/loader/loader.conf
sed "s/uuid/$UUID/" "$UTILS"/arch.conf > "$ESP"/loader/entries/arch.conf
if [[ $NVIDIA = 'yes' ]]; then
  sed -i '$s/$/ nvidia_drm.modeset=1/' "$ESP"/loader/entries/arch.conf
  sed -i '/^HOOKS=/s/\( *\)kms */\1/' /etc/mkinitcpio.conf
  # Enable early kms for plymouth?
  #sed -i '/^MODULES=/s/()/(nvidia nvidia_modeset nvidia_uvm nvidia_drm)/' /etc/mkinitcpio.conf
  #mkdir -p /etc/pacman.d/hooks
  #cp "$UTILS"/nvidia.hook /etc/pacman.d/hooks/nvidia.hook
  mkinitcpio -P
fi
systemctl enable systemd-boot-update.service

# Create swapfile
if [[ $SWAP_SIZE -ne 0 ]]; then
    dd if=/dev/zero of=/swapfile bs=1M count="${SWAP_SIZE}k" status=progress
    chmod 0600 /swapfile
    mkswap -U clear /swapfile
    swapon /swapfile
    echo '/swapfile none swap defaults 0 0' >> /etc/fstab
fi

# Laptop setup
if [[ $LAPTOP = 'yes' ]]; then
  # Enable tlp
  systemctl enable tlp.service
  systemctl mask systemd-rfkill.service
  systemctl mask systemd-rfkill.socket
  systemctl enable NetworkManager-dispatcher.service

  # Touchpad
  cp "$UTILS"/30-touchpad.conf /etc/X11/xorg.conf.d/30-touchpad.conf

  # Add user to video group and allow to change the brightness
  usermod -aG video "$USERNAME"
  cp "$UTILS"/backlight.rules /etc/udev/rules.d/backlight.rules
fi

# Desktop setup
HDD_UUID='ea862cc9-c5b3-4c8a-a07b-ece92b9a649a'
if grep -q "$HDD_UUID" <<< "$(ls /dev/disk/by-uuid)"; then
  mkdir -p "$HDD_MNT"
  chown "$USER":"$USER" "$HDD_MNT"
  chmod 700 "$HDD_MNT"
  echo "UUID=$HDD_UUID $HDD_MNT ext4 defaults 0 2" >> /etc/fstab
  mount "$HDD_MNT"
fi

# Firewalls (ufw)
ufw default deny incoming
ufw default allow outgoing
sed -i 's/^ENABLED=.*/ENABLED=yes/' /etc/ufw/ufw.conf
systemctl enable ufw.service

# Keyd
cp "$UTILS"/keyd.conf /etc/keyd/keyd.conf
systemctl enable keyd.service

# Lightdm
systemctl enable lightdm.service
sed -i 's/^#greeter-session=.*/greeter-session=lightdm-webkit2-greeter/' /etc/lightdm/lightdm.conf
sed -i 's/#greeter-setup-script=.*/greeter-setup-script=\/usr\/bin\/numlockx on/' /etc/lightdm/lightdm.conf
sed -i '/^webkit_theme/s/=.*/= litarvan/' /etc/lightdm/lightdm-webkit2-greeter.conf
cp "$UTILS"/wallpaper.png /usr/share/backgrounds/

# Enable automtic trim
systemctl enable fstrim.timer

# Enable systemd-timesync
systemctl enable systemd-timesyncd.service
# Automatic timezone?

# Configure and enable reflector.timer
mv /etc/xdg/reflector/reflector.conf /etc/xdg/reflector/reflector.conf.backup
cp "$UTILS"/reflector.conf etc/xdg/reflector/reflector.conf
systemctl enable reflector.timer

# Enable paccache.timer
systemctl enable paccache.timer

# Disable PC Speaker
cp "$UTILS"/nobeep.conf /etc/modprobe.d/nobeep.conf

# Power button suspends
sed -i 's/#HandlePowerKey=.*/HandlePowerKey=suspend/' /etc/systemd/logind.conf

# Disable mouse acceleration
cp "$UTILS"/50-mouse-acceleration.conf /etc/X11/xorg.conf.d/50-mouse-acceleration.conf

# Set default editor to neovim and terminal to kitty
mv /etc/environment /etc/environment.backup
cp "$UTILS"/environment /etc/environment

# Spotify remove banner
"$SCRIPTS"/spotify-remove-banner

# Set X11 keymap
cp "$UTILS"/00-keyboard.conf /etc/X11/xorg.conf.d/00-keyboard.conf

# Create systemd sleep hook to lock when suspending
cp "$UTILS"/suspend@.service /etc/systemd/system/suspend@.service
systemctl enable suspend@"$USERNAME".service

# Create systemd resume hook to turn the display on when resuming from suspend
cp "$UTILS"/resume@.service /etc/systemd/system/resume@.service
systemctl enable resume@"$USERNAME".service

